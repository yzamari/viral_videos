# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to not include the gitignore at the root of the repository.
.idea/

# VS Code
.vscode/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~

# Temporary files
*.tmp
*.temp
*.bak
*.swp
*.swo
*~.nib

# Project-specific files
outputs/
logs/*.log
data/temp/
data/cache/
temp/
cache/
*.mp4
*.mp3
*.wav
*.avi
*.mov
*.wmv

# AI Model files (large files)
models/*.bin
models/*.h5
models/*.pkl
*.model

# API Keys and secrets
.env
.env.local
.env.production
secrets.json
config/secrets.py

# Large media files
*.mkv
*.flv
*.webm
*.m4v
*.3gp
*.ogv

# Audio files
*.aac
*.ogg
*.wma
*.flac

# Image files (keep small ones, ignore large generated ones)
outputs/*.jpg
outputs/*.jpeg
outputs/*.png
outputs/*.gif
outputs/*.bmp
outputs/*.tiff

# Video generation temporary files
temp-audio.m4a
temp-video.mp4
temp_*.mp4
temp_*.mp3

# Google Cloud credentials
*.json
service-account-*.json
gcp-*.json

# Virtual environment directories (alternative names)
.virtualenv/
.venv*/
virtualenv/

# Node.js (if any frontend components added)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# pytest
.pytest_cache/
.coverage
htmlcov/

# Editor backups
*~
.#*
#*#

# System files
*.pid
*.lock

# Log files
*.log
logs/
log/

# Database files
*.db
*.sqlite
*.sqlite3

# Generated documentation
docs/build/
site/

# Profiling
*.prof
*.profile

# Coverage reports
coverage/
.coverage.*

# Temporary downloads
downloads/
temp_downloads/

# FFmpeg temporary files
ffmpeg_temp/
*.ffpreset 